/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as SplatRouteImport } from './routes/$'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DashboardUsersRouteImport } from './routes/dashboard/users'
import { Route as DashboardSettingsRouteImport } from './routes/dashboard/settings'
import { Route as DashboardSerialPortsRouteImport } from './routes/dashboard/serial-ports'
import { Route as DashboardSerialDataRouteImport } from './routes/dashboard/serial-data'
import { Route as DashboardRolesRouteImport } from './routes/dashboard/roles'
import { Route as DashboardReportsRouteImport } from './routes/dashboard/reports'
import { Route as DashboardNotificationsRouteImport } from './routes/dashboard/notifications'
import { Route as DashboardExportRouteImport } from './routes/dashboard/export'
import { Route as DashboardDepartmentsRouteImport } from './routes/dashboard/departments'
import { Route as DashboardDataLibraryRouteImport } from './routes/dashboard/data-library'
import { Route as DashboardActivityLogsRouteImport } from './routes/dashboard/activity-logs'
import { Route as ApiDemoTqTodosRouteImport } from './routes/api.demo-tq-todos'
import { Route as ApiDemoNamesRouteImport } from './routes/api.demo-names'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const SplatRoute = SplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSettingsRoute = DashboardSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSerialPortsRoute = DashboardSerialPortsRouteImport.update({
  id: '/serial-ports',
  path: '/serial-ports',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardSerialDataRoute = DashboardSerialDataRouteImport.update({
  id: '/serial-data',
  path: '/serial-data',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardRolesRoute = DashboardRolesRouteImport.update({
  id: '/roles',
  path: '/roles',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardReportsRoute = DashboardReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardNotificationsRoute = DashboardNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardExportRoute = DashboardExportRouteImport.update({
  id: '/export',
  path: '/export',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDepartmentsRoute = DashboardDepartmentsRouteImport.update({
  id: '/departments',
  path: '/departments',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDataLibraryRoute = DashboardDataLibraryRouteImport.update({
  id: '/data-library',
  path: '/data-library',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardActivityLogsRoute = DashboardActivityLogsRouteImport.update({
  id: '/activity-logs',
  path: '/activity-logs',
  getParentRoute: () => DashboardRoute,
} as any)
const ApiDemoTqTodosRoute = ApiDemoTqTodosRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiDemoNamesRoute = ApiDemoNamesRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosRoute
  '/dashboard/activity-logs': typeof DashboardActivityLogsRoute
  '/dashboard/data-library': typeof DashboardDataLibraryRoute
  '/dashboard/departments': typeof DashboardDepartmentsRoute
  '/dashboard/export': typeof DashboardExportRoute
  '/dashboard/notifications': typeof DashboardNotificationsRoute
  '/dashboard/reports': typeof DashboardReportsRoute
  '/dashboard/roles': typeof DashboardRolesRoute
  '/dashboard/serial-data': typeof DashboardSerialDataRoute
  '/dashboard/serial-ports': typeof DashboardSerialPortsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/login': typeof LoginRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosRoute
  '/dashboard/activity-logs': typeof DashboardActivityLogsRoute
  '/dashboard/data-library': typeof DashboardDataLibraryRoute
  '/dashboard/departments': typeof DashboardDepartmentsRoute
  '/dashboard/export': typeof DashboardExportRoute
  '/dashboard/notifications': typeof DashboardNotificationsRoute
  '/dashboard/reports': typeof DashboardReportsRoute
  '/dashboard/roles': typeof DashboardRolesRoute
  '/dashboard/serial-data': typeof DashboardSerialDataRoute
  '/dashboard/serial-ports': typeof DashboardSerialPortsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard': typeof DashboardIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$': typeof SplatRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/login': typeof LoginRoute
  '/api/demo-names': typeof ApiDemoNamesRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosRoute
  '/dashboard/activity-logs': typeof DashboardActivityLogsRoute
  '/dashboard/data-library': typeof DashboardDataLibraryRoute
  '/dashboard/departments': typeof DashboardDepartmentsRoute
  '/dashboard/export': typeof DashboardExportRoute
  '/dashboard/notifications': typeof DashboardNotificationsRoute
  '/dashboard/reports': typeof DashboardReportsRoute
  '/dashboard/roles': typeof DashboardRolesRoute
  '/dashboard/serial-data': typeof DashboardSerialDataRoute
  '/dashboard/serial-ports': typeof DashboardSerialPortsRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$'
    | '/dashboard'
    | '/login'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/dashboard/activity-logs'
    | '/dashboard/data-library'
    | '/dashboard/departments'
    | '/dashboard/export'
    | '/dashboard/notifications'
    | '/dashboard/reports'
    | '/dashboard/roles'
    | '/dashboard/serial-data'
    | '/dashboard/serial-ports'
    | '/dashboard/settings'
    | '/dashboard/users'
    | '/demo/tanstack-query'
    | '/dashboard/'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$'
    | '/login'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/dashboard/activity-logs'
    | '/dashboard/data-library'
    | '/dashboard/departments'
    | '/dashboard/export'
    | '/dashboard/notifications'
    | '/dashboard/reports'
    | '/dashboard/roles'
    | '/dashboard/serial-data'
    | '/dashboard/serial-ports'
    | '/dashboard/settings'
    | '/dashboard/users'
    | '/demo/tanstack-query'
    | '/dashboard'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/'
    | '/$'
    | '/dashboard'
    | '/login'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/dashboard/activity-logs'
    | '/dashboard/data-library'
    | '/dashboard/departments'
    | '/dashboard/export'
    | '/dashboard/notifications'
    | '/dashboard/reports'
    | '/dashboard/roles'
    | '/dashboard/serial-data'
    | '/dashboard/serial-ports'
    | '/dashboard/settings'
    | '/dashboard/users'
    | '/demo/tanstack-query'
    | '/dashboard/'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SplatRoute: typeof SplatRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  LoginRoute: typeof LoginRoute
  ApiDemoNamesRoute: typeof ApiDemoNamesRoute
  ApiDemoTqTodosRoute: typeof ApiDemoTqTodosRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/serial-ports': {
      id: '/dashboard/serial-ports'
      path: '/serial-ports'
      fullPath: '/dashboard/serial-ports'
      preLoaderRoute: typeof DashboardSerialPortsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/serial-data': {
      id: '/dashboard/serial-data'
      path: '/serial-data'
      fullPath: '/dashboard/serial-data'
      preLoaderRoute: typeof DashboardSerialDataRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/roles': {
      id: '/dashboard/roles'
      path: '/roles'
      fullPath: '/dashboard/roles'
      preLoaderRoute: typeof DashboardRolesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/reports': {
      id: '/dashboard/reports'
      path: '/reports'
      fullPath: '/dashboard/reports'
      preLoaderRoute: typeof DashboardReportsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/notifications': {
      id: '/dashboard/notifications'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardNotificationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/export': {
      id: '/dashboard/export'
      path: '/export'
      fullPath: '/dashboard/export'
      preLoaderRoute: typeof DashboardExportRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/departments': {
      id: '/dashboard/departments'
      path: '/departments'
      fullPath: '/dashboard/departments'
      preLoaderRoute: typeof DashboardDepartmentsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/data-library': {
      id: '/dashboard/data-library'
      path: '/data-library'
      fullPath: '/dashboard/data-library'
      preLoaderRoute: typeof DashboardDataLibraryRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/activity-logs': {
      id: '/dashboard/activity-logs'
      path: '/activity-logs'
      fullPath: '/dashboard/activity-logs'
      preLoaderRoute: typeof DashboardActivityLogsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardActivityLogsRoute: typeof DashboardActivityLogsRoute
  DashboardDataLibraryRoute: typeof DashboardDataLibraryRoute
  DashboardDepartmentsRoute: typeof DashboardDepartmentsRoute
  DashboardExportRoute: typeof DashboardExportRoute
  DashboardNotificationsRoute: typeof DashboardNotificationsRoute
  DashboardReportsRoute: typeof DashboardReportsRoute
  DashboardRolesRoute: typeof DashboardRolesRoute
  DashboardSerialDataRoute: typeof DashboardSerialDataRoute
  DashboardSerialPortsRoute: typeof DashboardSerialPortsRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardActivityLogsRoute: DashboardActivityLogsRoute,
  DashboardDataLibraryRoute: DashboardDataLibraryRoute,
  DashboardDepartmentsRoute: DashboardDepartmentsRoute,
  DashboardExportRoute: DashboardExportRoute,
  DashboardNotificationsRoute: DashboardNotificationsRoute,
  DashboardReportsRoute: DashboardReportsRoute,
  DashboardRolesRoute: DashboardRolesRoute,
  DashboardSerialDataRoute: DashboardSerialDataRoute,
  DashboardSerialPortsRoute: DashboardSerialPortsRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SplatRoute: SplatRoute,
  DashboardRoute: DashboardRouteWithChildren,
  LoginRoute: LoginRoute,
  ApiDemoNamesRoute: ApiDemoNamesRoute,
  ApiDemoTqTodosRoute: ApiDemoTqTodosRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
